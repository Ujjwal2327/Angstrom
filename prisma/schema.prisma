// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  username       String          @unique
  email          String          @unique
  firstname      String?
  lastname       String?
  pic            String?
  about          String?
  codingProfiles CodingProfile[]
  socialProfiles SocialProfile[]
  projects       Project[]
  skills         Skill[]
  education      Education[]
  experience     Experience[]
}

model CodingProfile {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  icon     String? @unique
  username String  @unique
  userId   Int
  user     User    @relation(fields: [userId], references: [id])
}

model SocialProfile {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  icon   String? @unique
  url    String  @unique
  userId Int
  user   User    @relation(fields: [userId], references: [id])
}

model Project {
  id           Int      @id @default(autoincrement())
  name         String
  live         String?
  code         String
  technologies String[]
  about        String
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
}

model Skill {
  id     Int     @id @default(autoincrement())
  name   String
  icon   String?
  userId Int
  user   User    @relation(fields: [userId], references: [id])
}

model Education {
  id             Int    @id @default(autoincrement())
  college        String
  degree         String
  specialization String
  start          String
  end            String @default("Present")
  userId         Int
  user           User   @relation(fields: [userId], references: [id])
}

model Experience {
  id       Int    @id @default(autoincrement())
  company  String
  position String
  start    String
  end      String @default("Present")
  about    String
  userId   Int
  user     User   @relation(fields: [userId], references: [id])
}
